/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CustomerRole.Login;

import business.Business;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import system.Customer.Customer;
import system.Invoice.Invoice;
import system.Order.OrderItem;
import system.Organization.Organization;

/**
 *
 * @author Administrator
 */
public class ViewInvoiceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewInvoiceJPanel
     */
    JPanel userProcessContainer;
    Business business;
    Customer customer;
            
    public ViewInvoiceJPanel( JPanel userProcessContainer,
    Business business,
    Customer customer
            ) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.customer = customer;
        productJPanel.setVisible(false);
        popInvoiceTable();
    }
 private void popInvoiceTable() {
        int rowCount = invoiceJTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) invoiceJTable.getModel()).removeRow(i);
        }
for(Organization o:business.getDepartmentDirectory().getDepartmentList()){
if(o.getType().equals(Organization.OrganizationType.AmazonAccountingDept)){
for (Invoice invoice : o.getInvoiceList().getInvoiceList()) {
            if (invoice.getOrder().getCustomer().getPerson().equals(customer)) {
                Object row[] = new Object[5];
                row[0] = invoice;
                row[1] = invoice.getOrder().getOrderNum();
                row[2]= invoice.getOrder().getEachOrderPrice();
//                row[3] = invoice.getOrder().getDeliverEmployee();
                row[3]=invoice.getDate();
                row[4] = invoice.getInvoiceStatus();

                ((DefaultTableModel) invoiceJTable.getModel()).addRow(row);

            }
        }
}
}
        
    }

    private void popOITable(Invoice invoice) {
        int rowCount = orderItemJTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) orderItemJTable.getModel()).removeRow(i);
        }

        for (OrderItem oi :invoice.getOrder().getOis()) {
            Object row[] = new Object[3];
            row[0] = oi;
            row[1] = oi.getProduct().getActualPrice();
            row[2] = oi.getQuantity();



            ((DefaultTableModel) orderItemJTable.getModel()).addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewDetailJButton = new javax.swing.JButton();
        payJButton = new javax.swing.JButton();
        backjButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        productJPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        orderItemJTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        invoiceJTable = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewDetailJButton.setText("View Details");
        viewDetailJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailJButtonActionPerformed(evt);
            }
        });
        add(viewDetailJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 230, -1, -1));

        payJButton.setText("Make Payment");
        payJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payJButtonActionPerformed(evt);
            }
        });
        add(payJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(2946, 233, -1, -1));

        backjButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 110, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Invoice History");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, -1, -1));

        productJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orderItemJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(orderItemJTable);
        orderItemJTable.getColumnModel().getColumn(0).setResizable(false);
        orderItemJTable.getColumnModel().getColumn(1).setResizable(false);
        orderItemJTable.getColumnModel().getColumn(2).setResizable(false);

        productJPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 474, 114));

        add(productJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 520, 160));

        invoiceJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice ID", "Order ID", "Total Price", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(invoiceJTable);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 550, 130));
    }// </editor-fold>//GEN-END:initComponents

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void viewDetailJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailJButtonActionPerformed
        // TODO add your handling code here:
        productJPanel.setVisible(true);
         int selectedRow = invoiceJTable.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }

        Invoice invoice = (Invoice) invoiceJTable.getValueAt(selectedRow, 0);

        popOITable(invoice);
    }//GEN-LAST:event_viewDetailJButtonActionPerformed

    private void payJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payJButtonActionPerformed
        // TODO add your handling code here:
          int selectedRow = invoiceJTable.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }

        Invoice selectedInvoice = (Invoice) invoiceJTable.getValueAt(selectedRow, 0);   
//        MakePaymentJPanel mpjp = new MakePaymentJPanel(userProcessContainer,business,selectedInvoice);
//        userProcessContainer.add("MakePaymentJPanel", mpjp);
//
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
      
    }//GEN-LAST:event_payJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JTable invoiceJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable orderItemJTable;
    private javax.swing.JButton payJButton;
    private javax.swing.JPanel productJPanel;
    private javax.swing.JButton viewDetailJButton;
    // End of variables declaration//GEN-END:variables
}
