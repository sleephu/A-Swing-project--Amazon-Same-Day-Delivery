/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.AmazonRole.SystemAdminRole;

import business.Business;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import system.Enterprise.Enterprise;
import system.Location.Location;
import system.Location.SubLocation;
import system.NetWork.NetWork;
import system.NetWork.NetWorkDirectory;
import system.Role.ShippingEnterpriseRole;
import system.Role.SupplierRole;
import system.UserAccount.UserAccount;
import system.WorkQueue.WorkRequest;

/**
 *
 * @author Administrator
 */
public class HandleRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HandleSupplierRequestJPanel
     */
    JPanel container;
    Business business;
    NetWorkDirectory netWorkDirectory;
UserAccount ua;
    public HandleRequestJPanel(JPanel container, Business business, NetWorkDirectory netWorkDirectory,
            UserAccount ua) {
        initComponents();
        this.container = container;
        this.business = business;
        this.netWorkDirectory = netWorkDirectory;
        this.ua=ua;
//        this.business =business;
        populateTableData();
    }

    private void populateTableData() {
        DefaultTableModel model = (DefaultTableModel) enterprisewrJTable.getModel();
        model.setNumRows(0);
//        for(NetWork n: netWorkDirectory.getNetWorkList()){
//        for(Enterprise e: n.getEnterpriseDirectory().getEnterpriseList()){
//            if(e instanceof Business){
        for (WorkRequest wr : business.getWorkQueue().getWorkRequestList()) {
//             System.out.println("uaRole:"+ua.getRole());
            if(wr.getWorkRequestType().equals(WorkRequest.WorkRequestType.TempEnterpriseRequest)){
            Object[] row = new Object[8];
            row[0] = wr;
            row[1]= wr.getMessage();
            row[2] = wr.getSender().getUserName();
            row[3] = wr.getCountryInfo();
            row[4] = wr.getStateInfo();
            row[5] = wr.getCityInfo();
            row[6] = wr.getTypeInfo();
            row[7] = wr.getStatus();
            model.addRow(row);
        }
        }
    }
//        }}}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterprisewrJTable = new javax.swing.JTable();
        approveJButton = new javax.swing.JButton();
        rejJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Enterprise Information");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, -1, -1));

        enterprisewrJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RequestID", "Enterprise Name", "UserName", "country", "state", "city", "Type", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterprisewrJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 810, 110));

        approveJButton.setText("Approve");
        approveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveJButtonActionPerformed(evt);
            }
        });
        add(approveJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 230, 110, -1));

        rejJButton.setText("Reject");
        rejJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejJButtonActionPerformed(evt);
            }
        });
        add(rejJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 230, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backJButtonActionPerformed
    private void approveRetalierEnterprise(WorkRequest wr) {

        for (NetWork n : netWorkDirectory.getNetWorkList()) {
//            if(n==null){
//                JOptionPane.showMessageDialog(null, "No NetWork exsisted");
//                return;
//            }
            if (wr.getCountryInfo().equals(n.getName())) {
                n.getEnterpriseDirectory().disableTempEnterprise(wr.getSender().getEnterprise());
                Enterprise e = n.getEnterpriseDirectory().createEnterprise(wr.getMessage(), Enterprise.EnterpriseType.LocalRetalier);
         
                e.setEnterpriseName(wr.getMessage());
                // avoid same userName, though different roles
//             e.getUserAccountDirectoty().deleUserAccount(wr.getSender());

                e.getUserAccountDirectoty().getUserAccountList().add(wr.getSender());
                
                Location l = new Location();
                boolean checkL = n.getLocationDirectory().checkLocationName(wr.getStateInfo());
                if (checkL == false) {
                    n.getLocationDirectory().getLocationList().add(l);
                }

                e.setLocation(l);
                e.getLocation().setName(wr.getStateInfo());
                e.getLocation().setCountry(n.getName());
                e.getLocation().setState(l.getName());
                SubLocation sbl = new SubLocation();
                boolean checkSubL = l.checkSubLocationName(wr.getCityInfo());
                if (checkSubL == false) {
                    l.getSblocation().add(sbl);
                }
                sbl.setName(wr.getCityInfo());
                e.getLocation().setCity(sbl.getName());
                wr.getSender().setEnterprise(e);
                wr.getSender().setUserName(wr.getSender().getUserName());
                wr.getSender().getEnterprise().getLocation().setCountry(wr.getCountryInfo());
                wr.getSender().getEnterprise().getLocation().setState(wr.getStateInfo());
                wr.getSender().getEnterprise().getLocation().setCity(wr.getCityInfo());

            }
        }
    }

    private void approveShippingE(WorkRequest wr) {


        for (NetWork n : netWorkDirectory.getNetWorkList()) {
            if (wr.getCountryInfo().equals(n.getName())) {
                n.getEnterpriseDirectory().disableTempEnterprise(wr.getSender().getEnterprise());
                Enterprise e = n.getEnterpriseDirectory().createEnterprise(wr.getMessage(), Enterprise.EnterpriseType.ShippingEnterprise);
                e.setEnterpriseName(wr.getMessage());
                e.getUserAccountDirectoty().getUserAccountList().add(wr.getSender());
                Location l = new Location();
                boolean checkL = n.getLocationDirectory().checkLocationName(wr.getStateInfo());
                if (checkL == false) {
                    n.getLocationDirectory().getLocationList().add(l);
                }
                e.setLocation(l);
                e.getLocation().setName(wr.getStateInfo());
                e.getLocation().setCountry(n.getName());
                e.getLocation().setState(l.getName());
                SubLocation sbl = new SubLocation();
                boolean checkSubL = l.checkSubLocationName(wr.getCityInfo());
                if (checkSubL == false) {
                    l.getSblocation().add(sbl);
                }
//                        = l.creSubLocation();
                sbl.setName(wr.getCityInfo());
                e.getLocation().setCity(sbl.getName());
                wr.getSender().setEnterprise(e);
                wr.getSender().setUserName(wr.getSender().getUserName());
                wr.getSender().getEnterprise().getLocation().setCountry(wr.getCountryInfo());
                wr.getSender().getEnterprise().getLocation().setState(wr.getStateInfo());
                wr.getSender().getEnterprise().getLocation().setCity(wr.getCityInfo());

            }
        }
    }
    private void approveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = enterprisewrJTable.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        WorkRequest wr = (WorkRequest) enterprisewrJTable.getValueAt(selectedRow, 0);
        wr.setStatus("Approve");


        if (wr.getTypeInfo().equals(Enterprise.EnterpriseType.TempRetailerEnterprise.toString())) {
            wr.getSender().setRole(new SupplierRole());
            wr.setTypeInfo(Enterprise.EnterpriseType.LocalRetalier.toString());
            approveRetalierEnterprise(wr);

        } else if(wr.getTypeInfo().equals(Enterprise.EnterpriseType.TempShippingEnterprise.toString())) {
            wr.getSender().setRole(new ShippingEnterpriseRole());
            wr.setTypeInfo(Enterprise.EnterpriseType.ShippingEnterprise.toString());
            approveShippingE(wr);

        }

        //        business.getUserAccountDirectoty().getUserAccountList().add(wr.getSender());
        //        business.getUserAccountDirectoty().checkUserName(wr.getSender().getUserName());

        populateTableData();
    }//GEN-LAST:event_approveJButtonActionPerformed

    private void rejJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = enterprisewrJTable.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        WorkRequest wr = (WorkRequest) enterprisewrJTable.getValueAt(selectedRow, 0);

        wr.setStatus("Rejected");
        //        wr.getSender().setType(UserAccount.Type.Reject);
        //        business.getUserAccountDirectory().deleteUA(wr.getSender());
        populateTableData();
    }//GEN-LAST:event_rejJButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTable enterprisewrJTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton rejJButton;
    // End of variables declaration//GEN-END:variables
}
